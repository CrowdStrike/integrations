{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"CrowdStrike Integrations","text":"<p>Authored by CrowdStrike Solution Architecture, these integrations utilize API-to-API capabilities to enrich both the CrowdStrike platform and partner applications.</p>"},{"location":"#cloud","title":"Cloud","text":""},{"location":"#cicd","title":"CI/CD","text":""},{"location":"#devsecops","title":"DevSecOps","text":""},{"location":"#software-development-toolkits-sdks","title":"Software Development Toolkits (SDKs)","text":""},{"location":"#other-tools","title":"Other Tools","text":""},{"location":"docs/","title":"Integrations","text":"<p>Here are the integrations</p>"},{"location":"docs/aws/","title":"AWS Integrations","text":"Integration Description Links AWS Systems Manager Distributor Automatically install and uninstall the CrowdStrike Falcon sensor into AWS EC2 instances. This integration utilizes CloudFormation scripts executed via AWS Lambda functions, which are executed whenever AWS Systems Manager Distributor detects EC2 instance creation or termination. Code on GitHub AWS Security Hub Publishes CrowdStrike detections to AWS Security Hub. Code on GitHub AWS Network Firewall with CrowdStrike Threat Intelligence Add FQDN's from CrowdStrike detections to a domain block list in AWS Network Firewall. Code on GitHub AWS PrivateLink Utilize AWS PrivateLink to provide secure connectivity between your CrowdStrike protected workloads/endpoints and the CrowdStrike Cloud. Code on GitHub AWS S3 as Recipient of Falcon Data Replicator Replicate event data from your CrowdStrike environment to an AWS S3 bucket. Code on GitHub"},{"location":"docs/aws/aws-network-firewall/about/","title":"About AWS Firewall","text":""},{"location":"docs/aws/aws-network-firewall/about/#about-aws-network-firewall","title":"About AWS Network Firewall","text":"<p>For security and compliance purposes, customers often have to control ingress and egress traffic related to Amazon EC2 instances and containers.  Previously, in order to achieve domain filtering, customers would have used a combination of NAT gateways and Squid or third party firewalls.  Stateful TCP/IP and UDP inspection was performed using Security Groups.   AWS Network Firewall extends the ability to monitor and control ingress and egress network traffic with its integration with AWS Firewall Manager and its ability to scale automatically.   </p> <p>The CrowdStrike threat intelligence feed is already seamlessly integrated with Amazon GuardDuty. Clients of Amazon GuardDuty already gain the benefits of CrowdStrike's use of sophisticated signatureless artificial intelligence/machine learning and indicators of attack (IOA) to alert on connections to and from suspicious domains.  The AWS Network Firewall provides exciting opportunities for its customers to enhance their cloud network security capabilities using its native services. </p>"},{"location":"docs/aws/aws-network-firewall/about/#integrations","title":"Integrations","text":"<p>We continue to evaluate the AWS Network Firewall for the purposes of providing additional integration between it and the CrowdStrike Cloud Security Solutions.   Soon after launch we will provide a Cloudformation template that will allow you to evaluate the service and our integration.   We have developed the template to demonstrate two ways in which we think our customers might use the integration.</p>"},{"location":"docs/aws/aws-network-firewall/about/#demo-scenario-add-domain-to-block-list-after-alert","title":"Demo Scenario: Add Domain to Block List After Alert","text":"<p>In this scenario a workload running the Falcon agent detects suspicious activity related to a domain,  we receive the alert and wish to quickly block all traffic related to the domain to disrupt the adversary.   Here, we are using AWS Security Hub to view findings.  AWS Security Hub reduces the effort of collecting and prioritising security findings across accounts, from AWS services, and AWS partner tools.  We leverage Security Hubs native automation capabilities to respond to the incident.   </p> <p></p> <p>The diagram above shows the steps involved in the process.</p> <ol> <li> <p>The Falcon agent detects suspicious activity related to a domain and generates a \u201cdetection\u201d which then appears in the falcon console.    </p> <p> 2. The incident is forwarded to AWS security hub which is presented as a CrowdStrike Finding</p> </li> </ol> <p></p> <p>3) CrowdStrike provides a lambda function that is added as a custom action to Security Hub that will extract the suspicious domain information from the finding and add it to a domain block list in the AWS Network Firewall.  </p> <p> </p>"},{"location":"docs/aws/aws-network-firewall/about/#scenario-2-threat-hunting-based-on-crowdstrike-domain-based-ioas","title":"Scenario - 2  Threat hunting based on CrowdStrike domain based IOAs","text":"<p>CrowdStrike Falcon offers a powerful set of features that can be used to hunt for threat activity in your environment. We believe that the AWS Network Firewall can also assist in the task of proactive threat hunting. </p> <p>The AWS Network Firewall can be deployed so that it has full visibility of network traffic entering and leaving a VPC. In this scenario we use CrowdStrike Falcon X to generate lists of domains that we wish to alert on in order to hunt for activity related to specific threat actors, or industry vertical. The diagram below shows the dataflow and the processes involved. </p> <p></p> <ol> <li> <p>We wish to scan our AWS environment for any network connections to domains of interest. Using the Falcon Console we generate a query and validate that it returns the required results.     </p> </li> <li> <p>We convert the query to a Falcon Query Language (FQL) query string.    We then add the FQL string to the lambda function as an environment variable.  </p> </li> <li> <p>The lambda function continuously updates the AWS Network Firewall based on a CloudWatch timer.    </p> </li> </ol>"},{"location":"docs/aws/aws-network-firewall/cs-threat-intel/","title":"Integrating with CrowdStrike Threat Intelligence","text":"<p>Joint customers of AWS and CrowdStrike can gain the benefits of CrowdStrike's use   of sophisticated signatureless artificial intelligence/machine learning and indicators   of attack (IOA) to alert on connections to and from suspicious domains.</p> <p>By integrating CrowdStrike Threat Intelligence with AWS Network Firewall, joint   customers can enhance their cloud network security capabilities using native services.</p>"},{"location":"docs/aws/aws-network-firewall/cs-threat-intel/#about-the-integration","title":"About the Integration","text":"<p>For security and compliance purposes, customers often have to control ingress and egress traffic related to Amazon EC2 instances and containers.  Previously, in order to achieve domain filtering, customers would have used a combination of NAT gateways and Squid or third party firewalls.  Stateful TCP/IP and UDP inspection was performed using Security Groups.   AWS Network Firewall extends the ability to monitor and control ingress and egress network traffic with its integration with AWS Firewall Manager and its ability to scale automatically.   </p> <p>The CrowdStrike threat intelligence feed is already seamlessly integrated with Amazon GuardDuty. Clients of Amazon GuardDuty already gain the benefits of CrowdStrike's use of sophisticated signatureless artificial intelligence/machine learning and indicators of attack (IOA) to alert on connections to and from suspicious domains.  The AWS Network Firewall provides exciting opportunities for its customers to enhance their cloud network security capabilities using its native services. </p>"},{"location":"docs/aws/aws-network-firewall/cs-threat-intel/#how-to-deploy","title":"How to Deploy","text":"<p>Please note the following when running the demo.</p> <ul> <li> <p>This Template will take 15-20mins to fully deploy in your VPC</p> </li> <li> <p>It can take 15 minutes for CrowdStrike detections to appear in Security Hub</p> </li> </ul>"},{"location":"docs/aws/aws-network-firewall/cs-threat-intel/#prerequisites","title":"Prerequisites","text":"<ol> <li> <p>You must install the template in a region that currently supports the AWS Network Firewall. You can check the latest here.</p> <p>(Currently US East (N. Virginia), US West (Oregon), and Europe (Ireland) Regions)</p> </li> <li> <p>You must have security hub enabled in the region where you are testing.</p> </li> <li> <p>The demo will require the following CrowdStrike subscriptions </p> </li> <li>Falcon Prevent</li> <li> <p>Falcon X</p> </li> <li> <p>You must have the ability to create OAuth2 API keys in the falcon console</p> </li> <li> <p>The demo will use the following AWS services.  You must have the ability to run these services in your account. </p> </li> <li>Security Hub</li> <li>EC2 Amazon Linux 2</li> <li>Lambda</li> <li>SQS</li> <li>Systems Manager</li> </ol>"},{"location":"docs/aws/aws-network-firewall/cs-threat-intel/#demo-description","title":"Demo Description","text":"<p>The diagram below shows the infrastructure deployed by the cloudformation template and the flows involved.  The demo will allow you to evaluate the two integration scenarios discussed in the overview </p> <p></p> <p>The Cloudformation template will setup the following in a new VPC </p> <ul> <li> <p>Windows EC2 Instance in a private subnet</p> <p>The windows instance is used to generate a detection related to a suspicious domain. </p> </li> <li> <p>Linux EC2 Instance in a public subnet</p> <p>The EC2 linux instance runs the security hub integration process that pulls detections from the CrowdStrike API and sends them them as \"findings\" to AWS security hub.  Note an SQS queue and lambda function are also deployed to assist with the process. See the Security Hub Integration (FIG) documentation for more information. </p> </li> <li> <p>Internet GW</p> </li> <li> <p>VPC </p> <ul> <li>2 x Subnets (Public + Private)</li> <li>3 x Route tables (Public + Private + IGW)</li> </ul> </li> <li> <p>1 x SQS Queue     Security Hub Integration </p> </li> <li> <p>4 x Lambda Functions - </p> <ul> <li> <p>Function to deploy the Network Firewall</p> </li> <li> <p>Security Hub (FIG) function required for security hub integration </p> </li> <li> <p>Function that is triggered by a security hub custom action to extract the domain information from the finding and  push it to the Network Firewall rule. </p> </li> <li> <p>Function that is triggered by a cloudwatch event to update a domain list with current IOC's from Falcon X</p> </li> </ul> </li> </ul>"},{"location":"docs/aws/aws-network-firewall/cs-threat-intel/#routing-setup","title":"Routing Setup","text":"<p>The diagram below shows the setup of the VPC</p> <p></p> <p>When the Network Firewall is created a VPC endpoint is created in each AZ.  The vpc endpoint is then used as the next  hop in the routing tables of subnets that are to be protected by the network firewall.</p>"},{"location":"docs/aws/aws-network-firewall/cs-threat-intel/#private-subnet","title":"Private Subnet","text":"<p>The private route table is associated with the private subnet (protected subnet) and has one additional route table entry  - default route 0.0.0.0/0 with next hop as the firewall vpc endpoint (vpce)</p>"},{"location":"docs/aws/aws-network-firewall/cs-threat-intel/#firewall-subnet","title":"Firewall Subnet","text":"<p>The Firewall route table is associated with the firewall subnet and has one additional route table entry  - default route 0.0.0.0/0 with next hop as IGW</p>"},{"location":"docs/aws/aws-network-firewall/cs-threat-intel/#igw-subnet","title":"IGW Subnet","text":"<p>The Gateway route table has an edge association with the Internet Gateway and has one additional route table entry  - 10.0.1.32/28(the protected subnet) with next hop as the firewall vpc endpoint (vpce)</p>"},{"location":"docs/aws/aws-network-firewall/cs-threat-intel/#deployment-steps","title":"Deployment Steps","text":"<ol> <li>Create CrowdStrike API keys Create an OAuth2 key pair with permissions for the Streaming API and Hosts API</li> </ol> Service Read Write Detections x Hosts x Detections x Actors (Falcon X) x Indicators (Falcon X) x Host groups x Incidents x IOCs (Indicators of Compromise) x Sensor Download x Event Streams x <p>Screenshot from key creation. Copy the CLIENT ID and SECRET values for use later as input parameters to the cloudformation template.</p> <p></p> <p>Make a note of your customer ID (CCID)</p> <ol> <li>Download the following files</li> <li>network-firewall-demo.yaml file from the cloudformation folder</li> <li> <p>All files in the s3-bucket folder</p> </li> <li> <p>Create an S3 bucket in the region where you will be deploying the template.    The bucket files will be accessed by a lambda function that is created by the template. No other access is required.</p> </li> </ol> <p></p> <ol> <li>Upload the files from the s3-bucket folder to the new bucket you created in the previous step.</li> </ol> <p>The contents of this folder may change over time.  The screenshot is not a definitive list of files</p> <p></p> <ol> <li>Load the CloudFormation Template </li> </ol> <p>Add the required Parameters</p> Parameters Description Default User Input Required CCID CrowdStrike Customer ID Yes FalconClientId Falcon OAuth2 Client ID. Yes FalconSecret Falcon Oath2 API secret. Yes FWConfigBucket S3 Bucket containing firewall policy config files Yes Owner Owner/Creator of resource Yes Reason Reason for Deployment eg Testing Yes AvailabilityZones Availability Zone to use for the subnets in the VPC Yes KeyPairName Public/private key pairs allow you to securely connect to your instance after it launches Yes DomainRGName Domain Rule Group Name Default: CRWD-Demo-Domain-RG No StatefulRGName Stateful Rule Group Name CRWD-Demo-Stateful-RG No PolicyName Firewall Policy Name CRWD-Demo-Firewall-Policy No FirewallName Firewall Name CRWD-Demo-Firewall No StatelessRGName Stateless Rule Group Name CRWD-Demo-Domain-RG No DomainRGName Domain Rule Group Name CRWD-Demo-Domain-RG No StatefulRGName Stateful Rule Group Name CRWD-Demo-Stateful-RG No PolicyName Firewall Policy Name CRWD-Demo-Firewall-Policy No FirewallName Firewall Name. CRWD-Demo-Firewall No FirewallDescription Crowdstrike demo firewall name. Crowdstrike demo firewall No PrivateSubnetCIDR CIDR block parameter must be in the form x.x.x.x/16-28 10.0.1.32/28 No PublicSubnetCIDR CIDR Block for the public DMZ subnet for secure administrative entry 10.0.1.0/28 No trustedSource CIDR from which access to bastion is to be permitted 0.0.0.0/0 No VPCCIDR CIDR Block for the VPC 10.0.1.0/24 No LatestLinuxAMI /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2 No LatestWindowsAMI /aws/service/ami-windows-latest/Windows_Server-2016-English-Full-Base No WindowsInstanceType AllowedValues: t2.small t2.micro t2.small No LinuxInstanceType AllowedValues: t2.small t2.micro t2.small No FigFileName The FIG is the process that integrates that Falcon Console with Security Hub fig-2.0.8-install.run No <ol> <li>The template will take 15-20 minutes to fully deploy (Please be patient)  </li> </ol>"},{"location":"docs/aws/aws-network-firewall/cs-threat-intel/#verify-deployment","title":"Verify Deployment","text":"<p>After 15-20 mins the stack deployment should be complete</p> <p></p> <ol> <li> <p>Verify that you have a Firewall in your newly created VPC.  Verify the firewall rule groups associated with the firewall policy. </p> </li> <li> <p>Verify that you have a route entry in the route table associated with the private subnet that has a next hop of the firewall vpce. </p> </li> <li> <p>Verify that you have a route entry in the route table with and edge association of the internet gateway.  </p> </li> <li> <p>Verify that you have a route entry in the route table associated with the public subnet that has a next hop of the firewall vpce. </p> </li> </ol>"},{"location":"docs/aws/aws-network-firewall/cs-threat-intel/#running-a-demo","title":"Running a Demo","text":"<ol> <li>Find the Windows instance that has been deployed</li> </ol> <p>Download the remote desktop file.  The RDP file contains the connection details for the host.  You will need to     decrypt the password using the \"Get password\" link. </p> <ol> <li>Decrypt the password </li> </ol> <p></p> <ol> <li>Connect to the windows instance and verify that the CrowdStrike agent is installed.</li> </ol> <p>Run the command 'sc query csagent'</p> <p></p> <ol> <li>Verify from the Windows hostname that the agent is connected to the console and that a policy is applied.</li> </ol> <p></p> <p>Check the falcon console  Got the the Hosts console and search for the hostname shown in the console output.</p> <p></p> <ol> <li>Open a browser and try the connect to http://adobeincorp.com</li> </ol> <p>The connection should fail but it will be sufficient to generate a detection in the console.</p> <p></p> <ol> <li>Verify the detection in the CrowdStrike console</li> </ol> <p>Observe the \"Triggering Indicator\" and \"command line\" fields in the detection providing information about how the     detection was triggered. </p> <p></p> <ol> <li>Check the Security Hub console</li> </ol> <p></p> <p>Search the security hub console for a finding related to the detection.  (It may take up to 10 minutes for the     detection to appear in security hub as a finding\")</p> <p>Search by \"Company name: is CrowdStrike\"</p> <p></p> <p>Select the finding of interest</p> <p></p> <ol> <li>Select the finding </li> </ol> <p></p> <p>Select the action \"CRWD-Domain-To-FW\"</p> <p>This action will trigger a lambda function which will add the domain to the firewall domain rule group.</p> <ol> <li>Goto the Network Firewall Rule Group settings in the AWS console</li> </ol> <p></p> <p>Verify that the domain has been added to the rule group</p> <p> </p>"},{"location":"docs/aws/aws-security-hub/","title":"Index","text":"<p>AWS Security Hub</p>"},{"location":"docs/google/","title":"Google Cloud Integrations","text":"<p>Welcome to Google!</p>"},{"location":"docs/microsoft/","title":"Microsoft Azure Integrations","text":"<p>Welcome to Microsoft!</p>"},{"location":"docs/redhat/","title":"Red Hat Integrations","text":"<p>Welcome to Red Hat!</p>","tags":["red hat","ansible"]},{"location":"docs/sdk/","title":"Software Development Toolkits (SDKs)","text":"<p>Some sort of SDKs</p>"},{"location":"docs/sdk/gofalcon/","title":"gofalcon","text":"<p>gofalcon</p>"},{"location":"docs/tools/","title":"Tools","text":"<p>Some sort of tool</p>"}]}